(sourceUnit (pragmaDirective pragma (pragmaName (identifier solidity)) (pragmaValue (version (versionConstraint (versionOperator ^) 0.4.19))) ;) (contractDefinition contract (identifier algorithm) { (contractPart (functionDefinition (functionDescriptor function (identifier Add)) (parameterList ( (parameter (typeName (elementaryTypeName uint)) (identifier a)) , (parameter (typeName (elementaryTypeName uint)) (identifier b)) )) (modifierList public (stateMutability pure)) (returnParameters returns (parameterList ( (parameter (typeName (elementaryTypeName uint))) ))) (block { (statement (simpleStatement (variableDeclarationStatement (variableDeclaration (typeName (elementaryTypeName uint)) (identifier r)) = (expression (expression (primaryExpression (identifier a))) + (expression (primaryExpression (identifier b)))) ;))) (statement (returnStatement return (expression (primaryExpression (identifier r))) ;)) }))) (contractPart (functionDefinition (functionDescriptor function (identifier Reduce)) (parameterList ( (parameter (typeName (elementaryTypeName uint)) (identifier a)) , (parameter (typeName (elementaryTypeName uint)) (identifier b)) )) (modifierList public (stateMutability pure)) (returnParameters returns (parameterList ( (parameter (typeName (elementaryTypeName uint))) ))) (block { (statement (simpleStatement (variableDeclarationStatement (variableDeclaration (typeName (elementaryTypeName uint)) (identifier r)) = (expression (expression (primaryExpression (identifier a))) - (expression (primaryExpression (identifier b)))) ;))) (statement (returnStatement return (expression (primaryExpression (identifier r))) ;)) }))) (contractPart (functionDefinition (functionDescriptor function (identifier Multiple)) (parameterList ( (parameter (typeName (elementaryTypeName uint)) (identifier a)) , (parameter (typeName (elementaryTypeName uint)) (identifier b)) )) (modifierList public (stateMutability pure)) (returnParameters returns (parameterList ( (parameter (typeName (elementaryTypeName uint))) ))) (block { (statement (simpleStatement (variableDeclarationStatement (variableDeclaration (typeName (elementaryTypeName uint)) (identifier r)) = (expression (expression (primaryExpression (identifier a))) * (expression (primaryExpression (identifier b)))) ;))) (statement (returnStatement return (expression (primaryExpression (identifier r))) ;)) }))) (contractPart (functionDefinition (functionDescriptor function (identifier Divide)) (parameterList ( (parameter (typeName (elementaryTypeName uint)) (identifier a)) , (parameter (typeName (elementaryTypeName uint)) (identifier b)) )) (modifierList public (stateMutability pure)) (returnParameters returns (parameterList ( (parameter (typeName (elementaryTypeName uint))) ))) (block { (statement (simpleStatement (variableDeclarationStatement (variableDeclaration (typeName (elementaryTypeName uint)) (identifier r)) = (expression (expression (primaryExpression (identifier a))) / (expression (primaryExpression (identifier b)))) ;))) (statement (returnStatement return (expression (primaryExpression (identifier r))) ;)) }))) (contractPart (functionDefinition (functionDescriptor function (identifier Pow)) (parameterList ( (parameter (typeName (elementaryTypeName uint)) (identifier a)) , (parameter (typeName (elementaryTypeName uint)) (identifier b)) )) (modifierList public (stateMutability pure)) (returnParameters returns (parameterList ( (parameter (typeName (elementaryTypeName uint))) ))) (block { (statement (simpleStatement (variableDeclarationStatement (variableDeclaration (typeName (elementaryTypeName uint)) (identifier r)) = (expression (expression (primaryExpression (identifier a))) ** (expression (primaryExpression (identifier b)))) ;))) (statement (returnStatement return (expression (primaryExpression (identifier r))) ;)) }))) }) <EOF>)